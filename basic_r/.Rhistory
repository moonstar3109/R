ggplot(d5, aes(x = year, y = mean_price)) +
geom_line()
ggplot(d5, aes(x = year, y = mean_price)) +
geom_line() +
xlim(c(2016 , 2020))
ggplot(d5, aes(x = year, y = mean_price)) +
geom_line() +
xlim(c(2016-0.5, 2020-0.5))
ggplot(d5, aes(x = year, y = mean_price)) +
geom_line() +
xlim(c(2016-0.5, 2020))
ggplot(d5, aes(x = year, y = mean_price)) +
geom_line(position = "dodge") +
xlim(c(2016-0.5, 2020))
# 저축률 vs 실업률
a <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed), color = 'blue')
# line과 point
b <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_point(aes(x = date, y = psavert), size = 0.1)
# 하나의 데이터를 점과 라인으로 표현
eco <- as.data.frame(economics)
head(eco)
# 저축률 vs 실업률
a <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed), color = 'blue')
# line과 point
b <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_point(aes(x = date, y = psavert), size = 0.1)
tester <- data
a <- tester$year
b <- tester$month
tester$date <- paste(a,b,rep="01", sep = "-")
tester$date <- as.Date(data$date)
test$date
tester
tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date) %>%
summarise(mean_price = mean(price))
tester
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date) %>%
summarise(mean_price = mean(price))
d5
class(tester$date)
tester$date <- paste(a,b,rep="01", sep = "-")
tester$date <- as.Date(data$date)
tester$date <- as.Date("yyyy-mm-dd")
tester$month <- ifelse(tester$month < 10,paste(0,tester$month,rep("")),tester$month)
b <- tester$month
b
tester$month <- ifelse(tester$month < 10,paste(0,tester$month),tester$month)
b <- tester$month
b
a <- tester$year
a
tester <- data
tester$month <- ifelse(tester$month < 10,paste0(0,tester$mon),tester$month)
b <- tester$month
b
tester$date <- paste(a,b,rep="01", sep = "-")
tester$date <- as.Date("yyyy-mm-dd")
tester$date <- paste(a,b,rep="01", sep = "-")
tester$date
c <- tester$date
tester$date <- as.Date(c,"%Y-%m-%d")
class(tester$date)
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date) %>%
summarise(mean_price = mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date) %>%
mutate(mean_price = mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(year,month)%>%
mutate(mean_price=mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region =="서울울")) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region =="서울")) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
d5
tester%>%
filter(!is.na(area) & !is.na(price))%>%
group_by(year)
d5%>%
filter(!is.na(area) & !is.na(price))%>%
group_by(year)
ggplot(d5) +
geom_line(aes(x = year, y = mean_price))
table(is.na(d5))
d5%>%
filter(!is.na(area) & !is.na(price))%>%
group_by(region,year)
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
d5
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price)) %>%
summarise(region)
d5 <- tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price)) %>%
tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
data
data
data
data
data
a <- tester$year
a
tester$month <- ifelse(tester$month < 10,paste0(0,tester$mon),tester$month)
b <- tester$month
b
tester$date <- paste(a,b,rep="01", sep = "-")
c <- tester$date
tester$date <- as.Date(c,"%Y-%m-%d")
class(tester$date)
tester%>%
filter( !is.na(area) & !is.na(price & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
tester%>%
filter( !is.na(area) & !is.na(price) & region == "서울")) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
tester%>%
filter( !is.na(area) & !is.na(price) & region == "서울") %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
d5 <- tester%>%
filter( !is.na(area) & !is.na(price) & region == "서울") %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = year, y = mean_price))+
geom_line()
ggplot(d5, aes(x = date, y = mean_price))+
geom_line()
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(region,date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line()
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(year,date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line()
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(year,month)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line()
d5 <- tester%>%
filter( !is.na(area) & !is.na(price)) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line()
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
d5 <- tester%>%
filter( !is.na(area) & !is.na(price) & region == "서울") %>%
group_by(region, date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
head(d5,20)
test <- read.csv("data/test.csv")
data <- test
d5 <- tester%>%
filter( !is.na(price) & region == "서울") %>%
group_by(region, date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
data <- test
data <- rename(data,
c("region" = "지역명",
"area" = "규모구분",
"year" = "연도",
"month" = "월",
"price" = "분양가격..."))
table(is.na(data$region) )
table(is.na(data$year) )
table(is.na(data$price) )
tester <- data
a <- tester$year
a
tester$month <- ifelse(tester$month < 10,paste0(0,tester$mon),tester$month)
b <- tester$month
b
tester$date <- paste(a,b,rep="01", sep = "-")
c <- tester$date
tester$date <- as.Date(c,"%Y-%m-%d")
class(tester$date)
d5 <- tester%>%
filter( !is.na(price) ) %>%
group_by(region, date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
d5 <- tester%>%
filter( !is.na(price) ) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
d5 <- tester%>%
filter( !is.na(price) ) %>%
group_by(date)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
d5 <- tester%>%
filter( !is.na(price) ) %>%
group_by(date,price)%>%
mutate(mean_price=mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
summarise(mean_price= mean(price))
tester%>%
filter( !is.na(price) ) %>%
group_by(date)
summarise(mean_price= mean(price))
tester%>%
filter( !is.na(price) ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
mean_price
d5 <- tester%>%
filter( !is.na(price) ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
d5 <- tester%>%
filter( !is.na(price) & region == "서울" ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
mpg <- as.data.frame(mpg)
mpg
str(mpg)
# 옵션을 aes함수 안에 지정하면 범주가나타나고, 밖에 선언해주면 그래프의 색상만 변합니다
ggplot(mpg) +
geom_point(aes(x= displ, y = hwy ), color = 'red')+
geom_point(aes(x = hwy, y = displ), color = 'blue')
# 옵션을 aes함수 안에 지정하면 범주가나타나고, 밖에 선언해주면 그래프의 색상만 변합니다
ggplot(mpg) +
geom_point(aes(x= displ, y = hwy ), color = 'red')+
geom_point(aes(x = hwy, y = displ), color = 'blue')
library(ggplot2)
mpg <-  as.data.frame(mpg)
library(dplyr)
ggplot(mpg, aes(x = cty, y = hwy))+
geom_point()
# Q2
# 미국 지역별 인구통계 정보를 담은 ggplot2 패키지의 midwest 데이터를 이용합니다
# x 축은 poptotal(전체 인구), y 축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요.
# 전체 인구는 50 만 명 이하, 아시아인 인구는 1 만 명 이하인 지역만 산점도에 표시되게 설정하세요.
mid <- as.data.frame(midwest)
str(mid)
ggplot(mid, aes(x = poptotal, y = popasian))+
geom_point()+
xlim(1,500000)+
ylim(1,10000)+
labs(x="전체인구", y="아시아인구")
# Q3
# mpg데이터에서 어떤 회사별 suv 차종의 도시 연비가 높은지 확인하려 합니다.
# suv차종을 대상으로 평균 cty(도시 연비)가 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요.
# 막대는 연비 가 높은 순으로 reorder하세요.
mpg
d1 <- mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
ggplot(d1, aes(x = reorder(manufacturer, -mean_cty), y = mean_cty , fill = manufacturer)) +
geom_col()
# Q4
# 자동차 중에서 어떤 class(자동차 종류)가 가장 많은지 알아보려고 합니다.
# 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요.
mpg
ggplot(data = mpg, aes(x = class , fill = model) ) + geom_bar() +
coord_polar(theta = "y")
eco <-  as.data.frame(economics)
ggplot(eco, aes(x = date, y = psavert)) +
geom_line()
mpg%>%
filter(class %in% c ("compact", "subcompact", "suv")) %>%
ggplot(aes(x = class, y = cty, color)) +
geom_boxplot()
'''
그래프와 그래프 더하기
중간에 있는 레이어층(그래프함수)들이 겹쳐서 서로 보이는 형태로 사용함.
여러그래프를 겹쳐 표현할때는 aes()을 그래프함수에 넣습니다.
'''
mpg <- as.data.frame(mpg)
mpg
str(mpg)
# 옵션을 aes함수 안에 지정하면 범주가나타나고, 밖에 선언해주면 그래프의 색상만 변합니다
ggplot(mpg) +
geom_point(aes(x= displ, y = hwy ), color = 'red')+
geom_point(aes(x = hwy, y = displ), color = 'blue')
# 축을 고정하고, 서로다른 데이터를 표현
ggplot(mpg)+
geom_point(aes(x = displ, y =cty), color = 'red') +
geom_point(aes(x = displ, y = hwy), color = 'blue')
# 하나의 데이터를 점과 라인으로 표현
eco <- as.data.frame(economics)
head(eco)
# 저축률 vs 실업률
a <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed), color = 'blue')
# line과 point
b <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_point(aes(x = date, y = psavert), size = 0.1)
c <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed),  color = 'blue') +
geom_hline(yintercept = mean(eco$psavert), color = 'green') + # y축의 값
geom_vline(xintercept = as.Date("2010-12-31"), color = 'black' ) + # x축의 값
labs(title = "저축률 vs 실업률", x = "날짜" , y = "저축률")
# 동시에 여러 그래프를 표현하기 gridExtra패키지
install.packages("gridExtra")
library(gridExtra)
a
b
c
# step2 - grid.arrange() 함수안에 표현
grid.arrange(a,b,c, nrow = 1 , ncol = 3)
grid.arrange(a,b,c, nrow = 3 , ncol = 1)
grid.arrange(a,b,c, nrow = 2 , ncol = 2)
c <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed),  color = 'blue') +
geom_hline(yintercept = mean(eco$psavert), color = 'green') + # y축의 값
geom_vline(xintercept = as.Date("2010-12-31"), color = 'black' ) + # x축의 값
labs(title = "저축률 vs 실업률", x = "날짜" , y = "저축률")
c <- ggplot(eco) +
geom_line(aes(x = date, y = psavert), color = 'red') +
geom_line(aes(x = date, y = uempmed),  color = 'blue') +
geom_hline(yintercept = mean(eco$psavert), color = 'green') + # y축의 값
geom_vline(xintercept = as.Date("2010-12-31"), color = 'black' ) + # x축의 값
labs(title = "저축률 vs 실업률", x = "날짜" , y = "저축률")
test <- read.csv("data/test.csv")
library(ggplot2)
library(dplyr)
data <- test
data <- rename(data,
c("region" = "지역명",
"area" = "규모구분",
"year" = "연도",
"month" = "월",
"price" = "분양가격..."))
head(data)
table(is.na(data$region) )
table(is.na(data$area) )
table(is.na(data$year) )
table(is.na(data$month) )
table(is.na(data$price) )
data$area <-  ifelse(data$area == "전체",NA, data$area)
d1<- data %>%
filter(!is.na(area)) %>%
mutate(area_lv = ifelse(area == "전용면적 60㎡이하","A",
ifelse(area == "전용면적 60㎡초과 85㎡이하", "B",
ifelse(area == "전용면적 85㎡초과 102㎡이하" , "C", "D"))))
str(data$price)
d1 <- data %>%
filter(!is.na(price)) %>%
group_by(region) %>%
summarise(mean_price = mean(price))
ggplot(d1, aes(x = reorder(region , -mean_price), y = mean_price , fill = region)) + geom_col() +
labs(title = "지역별 전체평균", x = "지역" , y = "평당분양가격평균균")
d2 <- data%>%
filter( !is.na(price) & !is.na(area)) %>%
group_by(year, region) %>%
summarise(mean_price = mean(price))
ggplot(d2, aes(x = year, y = mean_price, fill = region)) +
geom_col(position = "dodge")+
xlim(2015+0.5,2020-0.5)+
labs(title="연도별 지역평균", x = "연도" , y = "평당분양가격평균균" )
d3 <- data %>%
filter(!is.na(area) & !is.na(price) & year == 2019 & region == "서울")
d4 <- d3 %>%
group_by(month) %>%
summarise(mean_month_price = mean(price))
ggplot(d4, aes(x = month, y = mean_month_price)) +
geom_line() +
labs(title="2019년 서울지역 월별 평균변화", x = "월", y = "평당분양가격평균")
tester <- data
a <- tester$year
a
tester$month <- ifelse(tester$month < 10,paste0(0,tester$mon),tester$month)
b <- tester$month
b
tester$date <- paste(a,b,rep="01", sep = "-")
c <- tester$date
tester$date <- as.Date(c,"%Y-%m-%d")
class(tester$date)
d5 <- tester%>%
filter( !is.na(price) & region == "서울" ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = mean(mean_price), color = 'green') # y축의 값
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = mean(mean_price), color = 'green') # y축의 값
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = mean(mean_price), color = 'green') # y축의 값
d5 <- tester%>%
filter( !is.na(price) & region == "서울" ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
geom_hline(yintercept = mean(d5$mean_price), color = 'green') # y축의 값
e(color = "red")
geom_hli
geom_hline(yintercept = mean(d5$price), color = 'green') # y축의 값
geom_hline(yintercept = mean(d5$mean_price), color = 'green')
tester <- data
a <- tester$year
a
tester$month <- ifelse(tester$month < 10,paste0(0,tester$mon),tester$month)
b <- tester$month
b
tester$date <- paste(a,b,rep="01", sep = "-")
c <- tester$date
tester$date <- as.Date(c,"%Y-%m-%d")
class(tester$date)
d5 <- tester%>%
filter( !is.na(price) & region == "서울" ) %>%
group_by(date)%>%
summarise(mean_price= mean(price))
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")
geom_hline(yintercept = mean(d5$mean_price), color = 'black')
geom_hline(yintercept = 7300, color = 'black')
geom_hline(yintercept = 7300, color = 'black',size = 10)
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7300, color = 'black',size = 10)
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7300, color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7400, color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = mean(d5$mean_price), color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = mean(d5$price), color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7400, color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7300, color = 'green')
ggplot(d5, aes(x = date, y = mean_price))+
geom_line(color = "red")+
geom_hline(yintercept = 7300, color = 'green')+
labs(title="연도별 아파트분양가 변화동향", x = "연도" , y = "평당분양가격평균균")
